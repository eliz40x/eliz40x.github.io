<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Posts tagged arduino - eliza.link</title>
        <link>https://eliza.link</link>
        <description><![CDATA[技術や読書録を残します]]></description>
        <atom:link href="https://eliza.link/tags/arduino.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Mon, 08 Aug 2016 00:00:00 UT</lastBuildDate>
        <item>
    <title>Blink on AtTiny85</title>
    <link>https://eliza.link/posts/AtTiny85a.html</link>
    <description><![CDATA[<article><h2>Blink on AtTiny85</h2>
<p>Posted on August  8, 2016</p>

<p>Tags: <a href="/tags/program.html">program</a>, <a href="/tags/microprocessor.html">microprocessor</a>, <a href="/tags/arduino.html">arduino</a></p>

<p>以前からArduinoやESP8266を使ってなにやら怪しいこと(おもにコンデンサを爆発させていた)をしていたのですが、<a href="https://twitter.com/mc475_46">もは氏/mc475_46</a>の勧めもあってついにAVRマイコンに手を出してみました。後悔するのは後になってからでも構わないでしょう。</p>
<p>PlatformIOでFT232RLを使ってAtTiny85(AVR)に書き込んでいる記事なネットでみつけられなくて苦労したのでこの記事を書きました。 <!--more--></p>
<h2 id="tldr">TL;DR</h2>
<p><a href="#プログラムを書き込む">ここ</a>のプログラムを参照して</p>
<p>結線後に<code>./src/main.ino</code>と<code>./platformio.ini</code>にファイルを配置して<code>platformio run -t upload</code>すればOK。</p>
<h2 id="長い文章を読める人類向け">長い文章を読める人類向け</h2>
<p>回路図も作ってがんばって記事を書くつもりでしたが、Fritzing(可愛い回路図をつくれるソフト)のビルドが目の前でSegmentation faultを投げてから心が終わってしまったのでそれほど長い記事にはならない筈です。</p>
<p>さて、今回目指すのはAVR ーわたしが取り組んだのはAtTiny85ですが、おおよそ同じ手順でAVRのマイコン全般は動作する事でしょうー でBlink(Lチカ)をすることです。</p>
<p>ArduinoIDEなどGUIからでも出来るようですが、IDEはVimが使えないので面倒です。なので今回はPlatformIOというソフトウェアでコンパイルから書き込みまで行おうと思います。</p>
<h2 id="attiny85">AtTiny85?</h2>
<p><a href="http://www.atmel.com/Images/Atmel-2586-AVR-8-bit-Microcontroller-ATtiny25-ATtiny45-ATtiny85_Datasheet.pdf">データシート</a></p>
<p>AVRはAtmel社が作っているRISCのマイコンです。AtTiny85はそのAVRのうちのTinyシリーズに属するもので、Tiny(ちっぽけ)の名にふさわしくピンは8本しかありません、さらにそのうちの2PINは電源に使用するので我々は6PINしか使う事が出来ません。しかしDIP版でもわずか1cm * 1cmのマイコンにはROMが8Kbyte,RAMが512Byteも搭載されています、必要十分ではないでしょうか。</p>
<div class="figure">
<img src="/images/AtTiny85.jpg" alt="画像は秋月電子様より" />
<p class="caption">画像は秋月電子様より</p>
</div>
<h2 id="platformio">PlatformIO？</h2>
<blockquote>
platformioがすごいのは、IDEが必要ないということだ。inoは別途IDEが必要だったがplatformioは必要ない。パッケージとして自動でダウンロードしてくれるのだ。さらにすごいのは様々な組み込みボードをサポートしている。 有名どころはばっちり抑えているようで、STM32 Nucleoなど最近のボードもサポートされている。<br />
<a href="http://qiita.com/caad1229/items/7b5fb47f034ae6e0baf2">Qiita - コマンドラインでArduino開発 : vim + platformio</a>
</blockquote>
<p>コマンド一つでそのマイコンに必要なソフトウェアをインストールしてくれたり、ライブラリのインストーラになったりする凄いソフトウェアです、上記のリンクの記事を読めばだいたいの使い方は分かると思います。</p>
<h2 id="ft232rl">FT232RL</h2>
<p>秋月電子さんが出しているUSB - Serial変換基盤です、FTDI社のFT232Rというチップを利用しているようです。特殊なモードでマイコンにプログラムを書き込みます。 専用の書き込み機を買うと結構値が張るのでありがたいですね。</p>
<h2 id="avrdude">Avrdude</h2>
<p><a href="http://www.nongnu.org/avrdude/">AVRDUDE is a utility to download/upload/manipulate the ROM and EEPROM contents of AVR microcontrollers using the in-system programming technique (ISP).</a></p>
<p>AVRマイコンにプログラムを書き込むのに、PlatformIOはバックエンドでこれを使用しているみたいです。</p>
<p>しかしAvrdudeもPlatformIOもインターネットに記事が少ない…苦労しました。</p>
<h2 id="プログラムを書き込む">プログラムを書き込む</h2>
<p>はじめにFT232Rのドライバをインストールしましょう、お好みのパッケージマネージャや<a href="http://www.ftdichip.com/Drivers/VCP.htm">FTDIのWebサイト</a>からダウンロードしてください。 普通にFT232Rを使用するだけならドライバは必要無いようなのですが、BitBangモードでFT232Rを使用するには専用のドライバが必要になるそうです。</p>
<p>BitBangモードについては、<a href="http://ore-kb.net/hard/BitBang/">この記事</a>にくわしく書かれていました。</p>
<p>つぎにPlatformIOをインストールしてください、これもパッケージマネージャや<a href="http://platformio.org/">公式サイト</a>からインストールできます。</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">$ <span class="kw">mkdir</span> AtTiny85  
$ <span class="kw">cd</span> AtTiny85/  
$ <span class="kw">platformio</span> init -b attiny85  </code></pre></div>
<p>さあ、AtTiny85に書き込む準備は整いました</p>
<div class="sourceCode"><pre class="sourceCode c"><code class="sourceCode c"><span class="dt">void</span> setup(){
  pinMode(<span class="dv">1</span>, OUTPUT);
}

<span class="dt">void</span> loop(){
  digitalWrite(<span class="dv">1</span> , HIGH);
  delay(<span class="dv">1000</span>);
  digitalWrite(<span class="dv">1</span> , LOW); 
  delay(<span class="dv">1000</span>);
}</code></pre></div>
<p><code>main.ino</code></p>
<div class="sourceCode"><pre class="sourceCode ini"><code class="sourceCode ini"><span class="kw">[env:attiny85]</span>
<span class="dt">platform </span><span class="ot">=</span><span class="st"> atmelavr</span>
<span class="dt">framework </span><span class="ot">=</span><span class="st"> arduino</span>
<span class="dt">board </span><span class="ot">=</span><span class="st"> attiny85</span>
<span class="dt">upload_protocol </span><span class="ot">=</span><span class="st"> diecimila</span>
<span class="dt">upload_flags </span><span class="ot">=</span><span class="st"> -v -F -e -p t85 -B9600</span>
<span class="dt">board_f_cpu </span><span class="ot">=</span><span class="st"> 1000000L</span>
<span class="co"># upload_port = /dev/ttyUSB0</span></code></pre></div>
<p><code>platformio.ini</code></p>
<p>あとは<code>main.ino</code>を自動生成されたsrcディレクトリ下、<code>platformio.ini</code>を置き換えて下さい。</p>
<p>工夫しているのはPlatformIOの<code>upload_protocol</code>と<code>upload_flags</code>ぐらいで、Avrdude用にすこしオプションを書いてあるだけです。 マイコンをAtTiny85以外を使いたいなら、<code>board</code>の中身を変更してください。</p>
<p>具体的にどう変更すれば良いかわからなければ、<code>platformio boards</code> で一覧が表示されます。</p>
<p>さあ、あとは結線をするだけです。</p>
<p><a href="http://www.atmel.com/Images/Atmel-2586-AVR-8-bit-Microcontroller-ATtiny25-ATtiny45-ATtiny85_Datasheet.pdf">Atmelのデータシート</a></p>
<p><a href="http://qiita.com/erukiti/items/0a51d959082e242e2e2a#%E5%9B%9E%E8%B7%AF">結線はこのリンクを参考にしてください</a></p>
<p>さあ、出来ましたか？</p>
<div class="figure">
<img src="/images/Ft232rlToAttiny85.jpg" />

</div>
<p>それでは <code>$ platformio run -t upload</code> して下さい。</p>
<p>書き込めましたか？それではAtTiny85を差し替えてBlinkしてみましょう、AtTiny85のIOはこの通りになっています。</p>
<div class="figure">
<img src="/images/AttinyBlink.png" alt="画像はSparkFun様より" />
<p class="caption">画像はSparkFun様より</p>
</div>
<p>ArduinoでLEDを光らせていた時の1/10程度の大きさで同じことが実現できてしまいましたね、最高です。</p>
<div class="figure">
<img src="/images/Blink.jpg" alt="Blink" />
<p class="caption">Blink</p>
</div>
<p>なお、うまくいかない人はTwitterの@Eliza_0xか、me [at] eliza [dot] linkまでメールをくだされば、出来る限り手伝います。</p>
<h2 id="thanks">Thanks</h2>
<p>紹介できなかった私が参考にしたリンク達</p>
<ul>
<li><a href="http://qiita.com/erukiti/items/0a51d959082e242e2e2a">FT232RLでAVRライターを自作してATtiny85をDigispark互換にするまで</a></li>
<li><a href="http://make.kosakalab.com/make/electronic-work/arduino-ide-arduinoisp/">Arduino IDEでATtiny他の開発（Arduino-ISP編）</a></li>
<li><a href="https://learn.sparkfun.com/tutorials/tiny-avr-programmer-hookup-guide/attiny85-use-hints">Tiny AVR Programmer Hookup Guide</a></li>
<li><a href="http://techlife.cookpad.com/entry/2015/10/28/080000">電子工作に必要な道具達</a></li>
<li><a href="http://qiita.com/erukiti/items/1a517c3e424835ca14f1">ステップアップ電子工作/レベル1前編 ブレッドボードで電子工作を始めよう (まずは準備編)</a></li>
<li><a href="http://startelc.com/AVR/Avr_100timrMemo.html">AVRのタイマー</a></li>
<li><a href="http://qiita.com/tadfmac/items/3a42a641531f2c3679a1">ArduinoユーザーのためのATTiny入門</a></li>
<li><a href="http://www.ernstc.dk/arduino/38khz_timer.htm">Using timers to generate 38KHZ - for IR</a></li>
<li><a href="https://www40.atwiki.jp/system-ed/pages/16.html">C言語　演算子</a></li>
<li><a href="http://tyk-systems.com/ATmega328/ATmega328.html">Arduinoから取り外したATmega328を外付け水晶振動子(発振子)で動作させる。</a></li>
<li><a href="http://www.wsnak.com/wsnakblog/?p=4110">arduino(AVR)でキャリア波38KHzを発生させる</a></li>
</ul>
<p>他多数、関係企業とプログラマ達に感謝</p>
<p>Tags: <a href="/tags/program.html">program</a>, <a href="/tags/microprocessor.html">microprocessor</a>, <a href="/tags/arduino.html">arduino</a></p>
</article>
]]></description>
    <pubDate>Mon, 08 Aug 2016 00:00:00 UT</pubDate>
    <guid>https://eliza.link/posts/AtTiny85a.html</guid>
    <dc:creator>Eliza Calls</dc:creator>
</item>

    </channel>
</rss>
